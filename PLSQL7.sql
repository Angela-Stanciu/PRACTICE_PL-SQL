--CURSOR
--CURSOR-UL ESTE UN POINTER DIRECTIONAT CATRE O ZONA DE MEMORIE;
--CURSOR-UL TINE UN SET ACTIV DE INREGISTRARI RETURNATE DE SQL;
--EXISTA DOUA TIPURI DE CURSOR: IMPLICIT SI EXPLICIT;


--CURSOR-UL IMPLICIT
--PENTRU CURSOR-UL IMPLICIT NU PUTEM CONTROLA INFORMATIA CA SA O PUTEM PROCESA;
--EXISTA DIVERSE ATRIBUTE PRECUM: 
--SQL%FOUND -- RETURNEAZA ADEVARAT DACA AFECTEAZA UNA SAU MAI MULTE INREGISTRARI, APLICAT DML-ULUI SAU PENTRU SLECT INTO;
--SQL%NOTFOUND -- RETURNEAZA ADEVARAT DACA NU AFECTEAZA NICIO INREGISTRARE;
--SQL%ISOPEN -- RETURNEAZA FALS DACA E APLICAT CURSOR-ULUI IMPLICIT, PENTRU CA ORACLE IL INCHIDE AUTOMAT;
--SQL%ROWCOUNT -- RETURNEAZA NUMARUL DE INREGISTRARI AFECTATE DE DML SI SELECT INTO;


--EXEMPLU
DECLARE
    total number;
BEGIN
  INSERT INTO Pisica(nume)
  VALUES('Motanel');
  IF SQL%NOTFOUND THEN
    dbms_output.put_line('nu exista inregistrari');
  ELSIF SQL%FOUND THEN
    total := SQL%ROWCOUNT;
    dbms_output.put_line('total');
  END IF;
END;
/


--CURSOR-UL EXPLICIT
--SE FOLOSESTE SELECT, PENTRU A PRELUA INREGISTRARILE;
--SINTAXA CURSOR:
--CURSOR NUME IS SELECT [...];
--OPEN NUME_CURSOR;
--FETCH NUME_CURSOR INTO VARIABILE[...];
--CLOSE NUME_CURSOR;


--EXEMPLU
DECLARE
    c_id comanda.id%type;
    c_nume comanda.nume%type;
  CURSOR c_comanda IS
  SELECT id, nume FROM comanda;
BEGIN
  OPEN c_comanda;
  LOOP
  FETCH c_comanda INTO c_id, c_nume;
  EXIT WHEN c_comanda%NOTFOUND;
    dbms_output.put_line(c_id||c_nume);
  END LOOP;
  CLOSE c_comanda;
END;
/


--INSTRUCTIUNEA FOR LOOP
--PERMITE PRELUAREA FIECARUI RAND, FARA A GESTIONA MANUAL CICLUL DE EXECUTIE (OPEN, FETCH, CLOSE);
--OBS: DACA NU EXISTA NICIUN RAND DE PRELUAT, SE VA INCHIDE CURSOR-UL;
--SINTAXA FOR LOOP:
--FOR RECORD IN NUME_CURSOR
--LOOP
--Sn;
--END LOOP;
--OBS: RECORD ESTE O VARIABILA LOCALA, CARE VA PRELUA TIPUL CURSOR-ULUI EXPLICIT;


--EXEMPLU FOR LOOP:
DECLARE
  CURSOR c_produs
  IS
  SELECT nume, pret
  FROM produs
  ORDER BY pret DESC;
BEGIN
  FOR r_produs IN c_produs
  LOOP
    dbms_output.put_line(r_produs.nume || r_produs.pret);
  END LOOP;
END;
/

--OBS: SE POATE FOLOSI O INTEROGARE DUPA FOR IN (CE E MAI SUS);
--OBS: UN CURSOR POATE AVEA PARAMETRII;
--SINTAXA CURSOR CU PARAMETRII:
--CURSOR NUME_CURSOR(LISTA_PARAMETRII)
--IS
--INTEROGARE;

--OBS: DEOBICEI, LISTA DE PARAMETRII SE FOLOSESTE IN INTEROGARE CU WHERE DE EXEMPLU;
--OBS: SE DAU VALORI PARAMETRILOR, CAND SE DESCHIDE CURSOR-UL;
--OPEN NUME_CURSOR(LISTA_VALORI);